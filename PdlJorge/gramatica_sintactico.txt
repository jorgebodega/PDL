P' → P
P → B Z P | F Z P | Z P | eof
B → var T id | if (E) S | switch (E) Z {Z W} | S
T → int | bool | chars
S → id S' | return X | write (E) | prompt (id)
S'→ (L) | = E
X → E | 𝝺
L → E Q | 𝝺
Q → , E Q | 𝝺
E → R E'
E'→ && R E' | 𝝺
R → U R'
R'→ > U R'| 𝝺
U → V U'
U'→ * V U' | 𝝺
V → id V' | (E) | entero | cadena | True | False
V'→ (L) | ++ | 𝝺
F → function H id (A) Z { Z C }
H → T | 𝝺
A → T id K | 𝝺
K → , T id K | 𝝺
Z → cr Z'
Z' → cr Z' | 𝝺
C → B Z C | 𝝺
W → case Y : S M Z N
Y → entero
M → ; break | cr break | 𝝺
N → case Y : S M Z N | 𝝺
